#!/usr/bin/php
<?php
/******************************************************************************
* AbuseIO 3.0
* Copyright (C) 2015 AbuseIO Development Team (http://abuse.io)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation
* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
*******************************************************************************
*
* This script will do the regular needed tasks, like cleaning old info, merging
* and closing old tickets
*
******************************************************************************/

include (realpath(dirname(__FILE__))."/../lib/core/loader.php");

logger(LOG_DEBUG, "Knock Knock ... housekeeping");

if(!reportHousekeeping()) {
    logger(LOG_ERR, "Housekeeper failed to do reports");
}

if (defined('REMOVE_EVIDENCE')) {
    logger(LOG_DEBUG, "Housekeeper - starting old evidence removal (older then ".REMOVE_EVIDENCE.")");
    $timestamp = strtotime(REMOVE_EVIDENCE . " ago");
    if(date('Y', $timestamp) < 2013 || strtotime(date('d-m-Y H:i:s',$timestamp)) !== (int)$timestamp) {
        logger(LOG_WARNING, " Evidence cleanup was called with an incorrect timestamp (${timestamp})");
    } else {
        if(!evidenceCleanup($timestamp)) {
            logger(LOG_ERR, "Housekeeper - cleanup of old evidence failed");
        }
    }
}

if (defined('COLLECTOR_SNDS_ENABLED') && COLLECTOR_SNDS_ENABLED == true) {
    logger(LOG_DEBUG, "Housekeeper - starting SNDS collector");

    $config = array();
    if(!collect_snds_ipstatus($config)) {
        logger(LOG_ERR, "Housekeeper failed to run SNDS IP status collector");
    }
    if(!collect_snds_data($config)) {
        logger(LOG_ERR, "Housekeeper failed to run SNDS data collector");
    }
}

if (defined('COLLECTOR_OSINT_ENABLED') && COLLECTOR_OSINT_ENABLED == true) {
    logger(LOG_DEBUG, "Housekeeper - starting OSINT collector");
    $config = array();
    if(!collect_osint($config)) {
        logger(LOG_ERR, "Housekeeper failed to run OSINT collector");
    }
}

if (defined('COLLECTOR_RBLSCAN_ENABLED') && COLLECTOR_RBLSCAN_ENABLED == true) {
    logger(LOG_DEBUG, "Housekeeper - starting RBLSCAN collector");
    $config = array();
    if(!collect_rblscan($config)) {
        logger(LOG_ERR, "Housekeeper failed to run RBLSCAN collector");
    }
}



logger(LOG_DEBUG, "Housekeeper completed");
?>
