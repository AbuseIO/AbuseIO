<?php
/*
If you enable the custom_customer_resolving you will need to expand this function
so it will output the correct data. Note that local database resolving (customer table)
always takes precidence over this function and was meant for a local override.

If you want to use subfunctions you will need to prefix them with custom_ to 
prevent clashes.
*/

*/

Example 1: Using static data

function custom_find_customer($IP) {
    if(!isset($IP) || !valid_ip($IP) || strlen($IP) < 4){
        return false;
    }

    $customer = array(
                        'Code'      => 'ACME',
                        'Name'      => 'Another Company Making Everything LTD',
                        'Contact'   => 'r.runny@acme.ltd',
                        'AutoNotify'=> false
                     );


    return $customer;
}

*/

/*

Example 2: Using remote REST API

{
  "email_contacts": [
    "foo@bar",
  ],
  "customer": {
    "name": "Foo Inc",
    "id": "1"
  }
}

function custom_find_customer($IP) {
    $url = "https://foo/api/ip/get_contacts/$IP";
    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($curl, CURLOPT_HEADER, 0);
    if ($data = json_decode(curl_exec($curl),1)) {
        $out = array(
            'Code' => $data['customer']['id'],
            'Name' => $data['customer']['name'],
            'Contact' =>(empty($data['email_contacts']))?false:implode(',',$data['email_contacts']),
            'AutoNotify'=>false
        );
    } else {
        $out = false;
    }
    curl_close($curl);
    return $out;
}

*/
?>
